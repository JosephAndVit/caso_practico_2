---

- name: Despliege de la Aplicación Web
  hosts: web
  remote_user: admin
  become: true
  tasks:
    - name: Instalando herramientas
      dnf:
        name: '{{ item  }}'
        state: present
      with_items:
        - podman
        - skopeo
        - httpd-tools
        - openssl
        - git
        - python3
    
    - name: Paquete de python3
      pip: 
        name: passlib

    - name: Clonamos repositorio
      git:
        dest: /home/azureuser/git
        repo: https://github.com/JosephAndVit/caso_practico_2.git
        clone: yes

    - name: Creamos directorio
      file:
        path: /home/azureuser/webserver
        state: directory

    - name: Credenciales para autenticación
      htpasswd:
        path: /home/azureuser/webserver/.creds
        name: webUser
        password: 'abcd1234'
        mode: 0640
    
    - name: Crear clave privada para el certificado
      openssl_privatekey:
        path: /home/azureuser/webserver/localhost.key
        size: 2048

    - name: Crear la petición de firma del certificado
      openssl_csr:
        path: /home/azureuser/webserver/localhost.csr
        privatekey_path: /home/azureuser/webserver/localhost.key
        common_name: vmcp2
        country_name: ES
        state_or_province_name: Madrid
        locality_name: Madrid
        organization_name: DevOps
        organizational_unit_name: Ejemplo
        state: present

    - name: Crear certificado utilizando la clave privada y la petición de firma
      # openssl_certificate:
      #   path: /home/azureuser/webserver/localhost.crt
      #   privatekey_path: /home/azureuser/webserver/localhost.key
      #   csr_path: /home/azureuser/webserver/localhost.csr
      #   provider: selfsigned
      command: openssl x509 -signkey /home/azureuser/webserver/localhost.key -in /home/azureuser/webserver/localhost.csr -req -days 365 -out /home/azureuser/webserver/localhost.crt

    - name: Copiamos los ficheros de la web al directorio
      copy:
        src: /home/azureuser/git/web/{{ item }}
        dest: /home/azureuser/webserver/{{ item }}
        remote_src: true
      with_items:
        - index.html
        - httpd.conf
        - .htaccess
        - Containerfile

    - name: Generar la imagen del contenedor
      podman_image:
        name: webserver
        path: /home/azureuser/webserver

    - name: Etiquetar la imagen del contenedor
      command: podman tag localhost/webserver:latest acrcp2josephandrade.azurecr.io/casopractico2:TAG

    - name: Subir la imagen del contenedor al Registry
      podman_image:
        name: acrcp2josephandrade.azurecr.io/casopractico2
        tag: TAG
        push: true
        username: acrcp2josephandrade
        password: '4e6LUds7p7YdsBGSnac7jdr897aK+Yrk9yikozbHQ0+ACRBO55nf'
        push_args:
          dest: acrcp2josephandrade.azurecr.io

    - name: Crear el contenedor del servicio Web
      command: podman create --name web -p 8080:443 localhost/webserver

    - name: Generar los ficheros para gestionar el contenedor a través de systemd
      command: podman generate systemd --new --files --name web

    - name: Copiar el container-web.service al directorio de systemd
      copy:
        src: /home/azureuser/container-web.service
        dest: /etc/systemd/system/container-web.service
        remote_src: true

    - name: Recargar la configuración de systemd
      systemd:
        daemon_reload: true

    - name: Iniciar la aplicación Web desde systemd
      systemd:
        enabled: true
        name: container-web.service
        state: restarted
